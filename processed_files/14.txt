hats graphical user interface software requirements specification version cs4311 document control approval guidance team dr roach dr gates mr leyva customer dr victor winter approve document document change control initial release current release hats gui srs indicator page document date review date review schedule target date update schedule distribution list follow list people receive copy document time new version document available customer dr victor winter guidance team dr ann gates dr steve roach francisco javier leyva software teams creative team omega team porcelain team resilient team suzaku team change summary following table detail change version document version date modifier description leyva combined srss software team leyva edit remove redundancy roach organize reduce volume leyva use case revision diagram roach user interface description roach add scenario use case leyva roach add scenario use case leyva roach revision scenario use case roach modify hats specification roach leyva version send winter approval roach communication protocol revise roach protocol review dr winter roach sdt search clarify dr winter class typographic error find cs4311 hats sml interface clarify dr winter table content document control ii approval ii document change control ii distribution list ii change summary ii introduction purpose intended audience scope product definition acronym overview reference general description product feature management application parsing transformation language program target file execution transformation language program examination sdt pretty print output transformation use case actor use case description use case parse use case execute transformation program use case select application use case select file use case prepare application use case configure application use case display sdt transformation output use case display pretty print text transformation output use case generate pretty print output general constraint assumption dependency specific requirement external interface requirement user interface hardware interface software interface hat sml host os behavioral requirement relate real world object application input output hat sml display window stimulus response menu item file menu application menu configure menu run menu view menu mouse keyboard action hat sml completion relate feature prepare application parse execute transformation display transformation output display node text selection display window display sdts navigation display pretty print text display error display sdt pretty print text common target file non behavioral requirement performance requirement qualitative requirement security portability design implementation constraint requirement appendix hat gui class diagram appendix hat gui datum flow diagram appendix hat gui state transition diagram appendix hat sml communication protocol appendix sdt search criterion overview definition form sdt string node search pattern searching example appendix text search criterion appendix example sdt display list table table definition srs table acronym srs table file compose application table type display node table menu item hats gui table application configuration element table summary hat sml program table result example tree search table special symbol text search string table result example text search list figure figure hat architecture figure hat gui class diagram figure hat gui datum flow diagram level figure hat gui datum flow diagram manipulate navigate sdt figure hat gui datum flow diagram prepare application figure hat gui datum flow diagram manipulate pretty print text figure hat gui datum flow diagram apply transformation figure hat gui state diagram figure tree search example introduction purpose intend audience purpose software requirement specification srs clearly precisely describe requirement software system develop refer hats gui hats gui graphical user interface gui high assurance transformation system hats document serve reference guide developer software design implementation maintenance srs divide system requirement major section behavioral requirement non behavioral requirement behavioral requirement describe interaction system environment non behavioral requirement one relate definition attribute product perform function intended audience document dr winter guidance team software development team srs agreement requirement party software develop text gray highlight refer change previous version document scope product high integrity software program sandia national laboratories develop hat order utilize transformation base software development transformation know formal method develop software intent hat develop software high assurance transformation prove preserve semantic transform program system benefit high assurance software community provide tool develop software program request implementation platform independent gui simplify user interaction hat system provide user ability prepare application utilize hat apply transformation display manipulate output result execution transformation development platform independent gui member transformation research community chance experiment hat increase use hat provide program feedback member transformation research community aid development tool prototype system develop inadequate lack portability inability display output adequately goal develop hats gui system user friendly user interface platform independent increase use hats system definition table list definition document respect hats gui definition give specific document identical definition term common use purpose section assist user understand requirement system table definition srs term definition abstract tree tree active window window graphical user environment currently accept keyboard mouse input ancestor node ancestor node node set node element parent parent node software requirement specification cs4311 date page application set file describe problem domain possibly set transformation language program target file output file application stand entity contain data set require perform view transformation set association user select configuration application association relation file application example file map file generate file file program edit file child node node parent node child relationship inverse parent relationship edge collapse hide descendant display node color scheme select color shape represent different type display node display graph syntax derivation tree configuration set characteristic relate application control behavior hat gui table list element configuration copy paste operation allow user copy text process process typically copy paste operation transfer datum active process operate system buffer core set file consist lexical specification file grammar file zero user define library cursor display element graphical user environment mark location window buffer descendant node descendant node node set node element child child node directory special file hierarchical file system contain file directory directory synonymous folder display graph visual representation sdt sdt display graph set display node arc connect node display node visual graphical display node display node correspond sdt node sdt node correspond display node domain language transformation place domain define file core core drag operation mouse point device user press point device button move point device button press edge direct relation node tree edge relation node n1 node n2 write n1 n2 n1 parent n2 n2 child n1 expandable node leaf node display graph correspond tree node immediate descendant external editor editor available host os start separate process hats gui file file file system file consist path unique file root file file path file extension file extension set character file include follow right period file folder directory grammar file file represent set rule define language domain transformation define high assurance transformation system hats transformation system develop sandia system include hats sml program user interface provide service allow parse run transformation language program hats sml set service program provide parsing transform pretty printing function hats host os operating system hats sml hats gui run java programming language java java virtual machine jvm abstract computing machine responsible hardware operating system independence java platform keyboard cursor cursor associate keyboard cursor move keystroke arrow key tab key enter key leaf node node display graph display descendant node level number edge traverse order reach node tree start root lexical specification file define token recognize transformation language linux operating system linux unix like operating system available platform locator box rectangle draw sub tree navigation window indicate sub tree display sdt display window relative entire sdt mouse cursor cursor associate point device mouse cursor move move point device navigation window display window contain abstract representation entire sdt intent navigation window display facilitate navigation large sdt node element tree display graph node sdts contain text token derive parse input string apply transformation node display graph display node visual representation node sdts node sdts confuse display node parent node node child node parent relation inverse child relation edge parse generate sdt non sdt string input file transformation language program target parser program parse transformation language program target program parse transformation language program sdt representation transformation language program form hats parse transformation language program say parse path text string represent sequence directory name file uniquely specify location file file system platform combination hardware operating system software comprise computing system pretty print style file input file specify display pretty print format target language pretty print text text string output hat represent format result apply transformation language program target file formatting accord pretty print style problem domain domain program sdt sdt generate parse transformation language program proper sub tree tree t1 proper sub tree tree t2 t1 sub tree t2 t1 few node t2 relative path path start directory root directory root node initial element tree represent node scroll information display screen unroll scroll small form tree give tree set node small form tree tree sub tree element descendant root element proper sub tree small form tree sub tree tree t1 sub tree tree t2 n1 n2 e1 e2 root t1 nn2 descendant nn1 ee2 na nb nan1 nbn1 ee1 syntax derivation tree tree node represent left hand grammar production parse string terminal symbol grammar child node represent right hand production parse node target file program high assurance transformation system apply transformation target program target file contain computer program target sdt sdt generate parse target file terminal node node tree descendant time stamp date time recent modification file assume host os keep time stamp file tlp parse file parse transformation language program token text string single unit example word token describe lexical specification transformation rule specify translation string string hat applie transformation target file transformation problem target file application transformation language program sequence transformation construct control application transformation transform program program result apply transformation language program target file tree tree abstract data type compose set node set direct edge nxn edge e1 node n1 node n2 associate parent node n1 child immediate descendant node n2 child node exactly parent tree exactly distinguish node root node parent descendant node node find compute transitive closure child relationship node descendant unix unix operating system develop user define function file define semantic function symbol language domain form tree small form tree window element graphical user environment contain minimum border viewing area window windows operating system develop microsoft acronym table list acronym associate definition document table acronym srs acronym mean dfd data flow diagram gui graphical user interface hat high assurance transformation system hat gui hat graphical user interface high integrity software jvm java virtual machine ml meta language os operating system software requirement specification cs4311 date page sdt syntax derivation tree snl sandia national laboratories srs software requirements specification utep university texas el paso overview srs divide major section introduction general description specific requirement appendix section general description describe product functionality structure contain product feature describe high level point view main feature software user characteristic identify different type system user describe individual interaction system use case define user characteristic description actors use case scenario include section general constraint system assumption dependency system section describe specific requirement consist external interface requirement describe requirement user hardware software communication interface behavioral requirement divide behavioral requirement following category relate real world object stimulus relate feature functional requirement non behavioral requirement include performance requirement qualitative requirement design implementation constraint requirement list requirement include previous section appendix contain object model hats gui appendix contain data flow diagram system appendix contain state description hats gui appendix describe communication hats hats gui appendix describe search output string tree appendix give example syntax derivation tree sdt display reference creative software omega software porcelain software resilient software suzaku software interview report february creative software omega software porcelain software resilient software suzaku software feasibility report february creative software omega software porcelain software resilient software suzaku software prototype report march creative software omega software porcelain software resilient software suzaku software draft srs roach communications protocol memorandum mail message date roach memorandum dr winter mail message date omega software solutions personal communication notes dr winter april winter overview hats language independent high assurance transformation system leyva output hats mail message date leyva response dr winter mail message date roach vlwinter sandia gov memo mail message date roach important hats information mail message date roach winter responses mail message date winter victor meet dr winter university texas el paso computer science building room april winter victor roach personal communication winter victor roach personal communication winter victor roach personal communication winter victor roach personal communication winter victor roach personal communication winter victor roach personal communication fuehrer gary roach personal communication winter victor roach personal communication general description hat develop explore transformation base software development transformation know formal method develop software hats gui intend provide hat user intuitive graphical interface hat system hat publicly available hats gui deliver hat purpose hat perform program transformation provably correct fashion enable user construct software transform target program simply target write abstract language transform output program write concrete language demonstrate transformation preserve semantic target program user assurance transform program correct overview hats architecture give figure hats apply sequence transformation target program follow instruction transformation language program transformation language program consist sequence transformation instruction construct control application transformation target output sdt output text control language prettyprinter hats rewrite engine target parser program parser program figure hats architecture hats provide set service execute transformation language program write language ml port common computer platform hats service invoke execute ml program ml program function hats provide collection program refer document hats sml describe appendix hats sml execute transformation language program write particular problem domain core problem domain describe language transformation occur consist element store separate file description token language description context free grammar language library user define function evaluate function symbol language application consist domain rule transform input string output string set input output rule apply target program result apply sequence transformation target program sdt pretty print text string pretty print text string generate apply pretty print rule sdt pretty print rule contain pretty print style file number pretty print style file target program transformation language program output file give application additionally parse version transformation language program summary file file extension name give table term hat sml refer set service provide ml program apply transformation target table file compose application file type extension content description grammar file grm definition language transformation place core exactly require problem domain lexer specification file spec description token language transformation place core exactly require problem domain user define function sml function definition write ml define semantic evaluate function symbol language function evaluate semantically syntactically core exactly file require problem domain target file tgt input program transform number target file application parse target file tgt parse sdt correspond parse target file zero parse target file target file transformation language program tlp sequence transformation apply target file number transformation language program file application parse transformation language program tlp parse sdt correspond parse transformation language program zero parse transformation language program transformation language program pretty print style file sty directive control formatting transform target file number pretty print file appear application pretty printed output txt format output obtain apply transformation language program target file sdt output sdt syntax derivation tree obtain apply transformation language program target file parser parser program generate grammar lexical specification parse transformation language program file target file script file scr file contain sequence hats sml program execute order minimal user intervention hats gui system provide user intuitive interface hats sml system facilitate creation storage retrieval modification file application hats gui facilitate parsing execution sequence transformation language program display error message generate hats sml facilitate display exploration transformation output form sdt pretty print text expectation client make interface portable number user hats increase reliability hats sml increase increase exercising capability result error detection correction product feature hats gui provide user ability construct use transformation hats gui facilitate following activity management application parsing transformation language program target program execution transformation language program examination sdt pretty print output transformation subsection follow provide overview mention feature flow datum function illustrate datum flow diagram dfd give appendix transition state system illustrate state transition diagram give appendix management application hats gui facilitate creation deletion modification file relate application practical matter file relate application store directory folder addition hats gui manage file association application file association relationship file example target file associate recently pretty print style file hats gui allow user examine modify association parsing transformation language program target file hats gui orchestrate parsing transformation language program target file parsing entail translate human readable text file syntax derivation tree parsing time consume operation particularly multiple look ahead grammar order expedite execution transformation parse version file save type file parse transformation language program text file describe set transformation apply target file target program text file contain input string transform parsing use parser program hats sml generate parser generation require lexical specification grammar input execution transformation language program hats gui orchestrate execution transformation language program order hats sml execute transformation program program parse save sdt transformation language program specify target program transform user create transformation language program responsible correctly identify target program input file name embed transformation language program execution transformation language program hats sml create sdts output sdt contain parse version transform output string suitable use input transformation input pretty print service pretty print service transform target sdt text string accord formatting rule contain pretty print style file addition output file transformation language program specify debug error output hats gui capture datum write stream datum available user examination sdt pretty print output transformation hats gui facilitate display transformation output error message receive hats sml response parsing transformation type output receive hats sml give session datum set create save file input delete hats gui associate save file application hats gui list file available user allow user select file display display sdt pretty print text allow user manipulate display choose portion tree display allow user search text string sub tree use case actor system user hats sml host user access hats gui primarily apply transformation target file user set application user apply transformation target file user prepare application user choose view output previous transformation actor use case discuss generate pretty print output pars hats sml execute trans form ation prog ram er prepare application select application configure application hos dis play sdt trans form ation output dis play pretty print text trans form ation output select file actor figure use case diagram user user interact hats gui order prepare execute program transformation user hats gui expert give domain high level understanding transformation tool construct software user expect computer savvy possess experience operation editor software tool hierarchical file system menu navigation limited direction assistance necessary hats sml hats sml provide following service parser file parse target file parse transformation language program apply transformation language program target file pretty print output target sdt hats sml generate parse transformation language program sdts pretty print text error message output protocol use hats sml detail appendix host os operating system hats gui hats sml run host os expect provide file service provide buffer copy paste operation application use case description following use case describe possible interaction hats gui user hats sml host operating system describe possible interaction description follow step scenario number sequentially alternative particular step suggest flag alt alternative list scenario step alternative replace step main scenario step number alternative indicate step main scenario replace example step number indicate step alternative number step step replace step main scenario alternative list alternative take use case parse use case summary user request parsing transformation language program target file file parse parser file input hats sml hats sml generate sdt output save application actor user hats sml host os execute transformation precondition application select refer use case transformation language program core domain file create refer use case scenario user select option parse transformation language program currently open application alt user select transformation language program file tlp parse refer use case alt hats gui compare time stamp lexical specification grammar file time stamp application parser file parser file young file alt alt hats gui send message host os start parsetarget parseprogram program send name target file program file output file parser file host os hats sml parse input file alt write output output file end use case alt user select option parse target file instead transformation language program user select target file parse refer use case alt use case continue step alt file select step skip use case continue step alt parser file exist hats gui send message host os start makeparser program send lexical specification grammar file name parser file host os start makeparser program makeparser write output parser file alt use case continue step alt error creation parser file hats sml encounter error create parser file hats gui write error message error window end use case alt parser file youngest use case continue step alt parser error hats sml encounter error parse input file hats gui write error message error window end use case use case execute transformation program use case summary user request application transformation language program target file hats sml apply transformation language program target actor user hats sml host os precondition target transformation language program prepare application select refer use case scenario user select option execute transformation language program currently select application user select transformation language program file refer use case alt hats gui compare time stamp lexical specification grammar file time stamp parser file parser file young alt alt hats gui compare time stamp parse program file parser transformation language program user define library file parse program file young file alt alt hats gui clear display standard error standard output hats gui send message host os start applytransformation program send name parse program file user define library file host os hats gui redirect standard error standard output stream applytransformation process collect datum write stream later display hats sml applytransformation program write output sdt file name transformation language program transformation language program contain reference input output file hats gui handle file input file output applytransformaion end use case alt transformation language program file select step skip use case continue step alt parser file exist hats gui create program parser file refer use case use case continue step alt parser file young use case continue step alt program parse file exist hats gui create parse program file refer use case use case continue step alt program parse file young use case continue step use case select application use case summary user select application actor user host os parse transformation language program refer use case run transformation refer use case prepare application refer use case display sdt transformation output use case display pretty print text transformation output refer use case precondition desire application exist refer use case scenario system request host os list existing application current directory host os return list file current directory system display list existing application current directory alt alt user select application list alt system set select application current application end use case alt application exist current directory user select application perform operation end use case alt user choose directory level user select subdirectory parent directory system change current directory use case continue step use case select file use case summary user want perform operation system request filename list file name currently select application present user select file application actor user host o parse transformation language program refer use case run transformation refer use case prepare application refer use case display sdt transformation output refer use case display pretty print text transformation output refer use case precondition application select refer use case scenario system request host os list file current directory host os return list file current directory system display list file alt alt user select file list alt alt system set select file current file end use case alt file exist current directory user select application perform operation end use case alt user choose directory level user select subdirectory parent directory system change current directory use case continue step alt user enter path file instead select list user type path file system os access file path alt system prompt user accept copy file current application user option confirm cancel user confirm alt system copy file current application use case continue step alt user enter file available system present user error file find end use case alt user confirm system copy file current application use case continue use case prepare application use case summary user want perform operation select application operation include open close save save create new edit file application configure application actor user host os scenario close application precondition application select refer use case user select option close currently select application system ask confirmation user close application user confirm close application alt system check change currently select application configuration save alt system set currently select application end use case alt user cancel operation user select cancel option system cancel operation end use case alt change currently select application save system ask user confirm save application user choose save application alt system save change application configuration close scenario end use case alt user choose save application system close application save change application end use case scenario save application precondition application select refer use case user select option save currently select application system request host os save configuration file select application host os save configuration file select application non volatile storage alt system inform user application save end use case alt host os operating system unable save current application system inform application save end use case scenario save application precondition application select refer use case user select save currently open application different directory system request user save open application user enter select application save alt system confirm application unique alt system request host os create new directory give host os create new application enter alt system request host os copy core file configuration file tlp file new directory host os copy file select application create application alt system inform user application save enter end use case alt user choose cancel operation user select cancel option system cancel operation application save end use case alt application exist system inform user application exist end use case alt host os experience file system error end use case scenario edit file application precondition application select refer use case user select option edit file currently select application user select file edit use case system check application determine editor associate file editor associate file configuration explicitly associate file editor editor associate file type editor associate file alt hats gui send message host os start prefer editor new process pass file editor host os initiate process put editor process send filename argument end use case alt editor associate file hats gui prompt user select configure editor user select configure editor hats gui prompt user associate editor file file type user select associate editor file type alt alt hats gui associate editor file type update application configuration select editor preferred editor use case continue step alt user select associate editor specific file hats gui associate editor specific file update application configuration use case continue step alt user select cancel end use case scenario create new application precondition user select option create new application close exist application select refer use case scenario system ask user enter location new application user enter location new application alt system request host os create new application host os create new application alt system inform user new application create end use case alt user select cancel operation system cancel operation application create end use case alt application exist system present error message application exist end use case use case configure application use case summary user select application user configure setting select application setting application include available editor sdt display color sdt display shape default number level expand file association file editor file association target file transformation language program actor user host os precondition application select refer use case scenario configure editor list user select option configure editor system prompt editor configuration information editor configuration information sufficient start editor host os user enter editor parameter alt system save editor configuration application configuration end use case alt user select cancel end use case scenario configure sdt display user select option configure color shape graphical representation sdt system display list contain type display node corresponding current configure color type display node give table user select type node list alt system display list support color shape user select color shape list select type display node alt system set select value color shape type display node select end use case alt user cancel configure display operation system cancel operation change default color end use case alt user cancel operation particular type display node select system cancel operation change default color particular type display node use case continue step table type display node node type description root display node correspond root node sdt non expandable node display node correspond terminal node sdt terminal node child sdt display node expand non expandable node hide parent non expandable display node correspond sdt node parent node display node correspond technically correct consider case parent display expandable node display node draw leaf node display descendant correspond sdt node non terminal expandable node hide parent expandable display node correspond sdt node parent node display node correspond technically correct consider case parent display internal node display node draw parent descendant scenario configure expand level user select option configure default number level expand response single mouse click system ask user select enter number level expand user enter select number level expand number enter natural number system set enter select number level default number level expand end use case scenario file association editor user select option associate file type editor alt system display list configure editor refer use case system display list file type user select file type list alt user select editor list alt system associate select file type select editor user try edit file type select system request host os initiate process associate editor refer use case end use case alt user select option associate particular file editor system display list configure editor refer use case system display list file currently select application alt user select file list alt user select editor list alt system associate select file select editor user try edit select file system request host os initiate process associate editor refer use case end use case alt user cancel operation user select cancel option system cancel operation change association end use case alt file select use case continue step scenario save configuration user select option save configuration system save configuration application end use case use case display sdt transformation output use case summary user want display manipulate graphical representation sdt manipulation graphical representation sdt include select unselecte display node navigation display navigation window scroll expand collapse display node hide display node search sdt sub tree find small form tree actor user host os precondition transformation target file successful transformation output store associate application scenario sdt display user select option view manipulate graphical representation sdt user select sdt view manipulate refer use case system display graphical representation select sdt screen work area work area sdt display contain following element window display display graph representation sdt text window display label leaf node currently display graph window small contain information present window scroll bar facilitate scrolling system respond dragging scroll button press arrow key shift display appropriate direction sdt large window separate small window compress view sdt display window display graph entire sdt draw node display graph small display node sdt display work area necessary user able read node label necessary user able high level structure sdt small box name locator box display show sdt currently display main sdt display window user able manipulate display graph representation sdt remain scenario scenario select node user select display node display node selection method describe single node select right mouse click node single node select keyboard move keyboard cursor node press enter key keyboard cursor move node tab key node select draw mouse box desire node node select hold shift key select individual display node user select set node operation shift key hold previously select set node unselected system highlight small form tree select node display graph system find corresponding portion leaf text select node display graph system highlight corresponding portion leaf text sdt pretty print text display system find correspond pretty print text highlight text pretty print text window end use case scenario navigation window navigation user click mouse navigation window sdt display system determine node display graph close mouse cursor redraw display graph node center main display system update locator box navigation window display end use case scenario expand user point mouse cursor node click left mouse button alt system display tree expand descendant node display graph number level expand give application configuration few number level exist descendant choose node display system change shape color select node specify application configuration indicate expand node end use case alt user select expand select node user select set node refer scenario user select expand select node use case continue step scenario collapse user point mouse cursor node click left mouse button system remove descendant select node display graph system change shape color select node specify application configuration indicate collapse node end use case scenario hide node user select display node refer use case user select option hide select display node system remove select node display graph system change type display node remain screen indicate hide node display graph end use case scenario search user select option search sdt desire sub tree system ask user criterion search node search criterion sdts present appendix user enter search criterion system find match sub tree sdt start current keyboard cursor location alt system create display graph sub tree match search criterion display node match sub tree highlight node match search criterion highlight sdt pretty print text display pretty print text correspond highlight node sdt highlight end use case alt1 fail search system display message indicate search fail end use case scenario repeat search user select option repeat search sdt desire sub tree system find match sub tree sdt start current keyboard cursor location system create display graph sub tree match search criterion display node match sub tree highlight node match search criterion highlight sdt pretty print text display pretty print text correspond highlight node sdt highlight end use case scenario copy text text window system display text leaf node currently display graph text window user select portion display text system highlight select portion text text window user select option copy select text minimally system copy select text response ctrl insert key combination system put select copy text host os copy paste buffer end use case scenario refresh display precondition system display sdt generate transformation program transformation program execute sdt display sdt file overwrite applytransformation program user select option refresh display sdt system dispose currently display sdt system read sdt file display newly generate sdt display sdt contain approximately number node previously display sdt end use case use case display pretty print text transformation output use case summary user want display manipulate text representation result apply transformation language program target file manipulation text include select text search sub string actor user host os precondition transformation target file successful transformation output store associate application scenario display pretty printed text user select option view manipulate pretty print text particular successful transformation user select pretty print text view manipulate refer use case system display pretty print text work window work area display pretty print text contain text window display text window small contain information present window scroll bar facilitate scrolling system respond dragging scroll button press arrow key shift display appropriate direction user able manipulate pretty print text remainder scenario end use case scenario select text user select portion display pretty print text text selection method describe text select click drag mouse area text text select hold shift key move keyboard cursor arrow key user select text operation previously select text unselected system highlight select portion display pretty print text pretty print text graphical representation sdt display system find correspond display node sdt select portion pretty print text highlight correspond display node sdt end use case scenario search user select option search pretty print text desire text system ask user criterion search text text search criterion give appendix user enter select criterion search text system find portion pretty print text match search criterion highlight portion text match alt pretty print text graphical representation sdt display system find correspond node sdt select portion pretty print text highlight correspond node sdt end use case alt1 fail search system display message indicate search fail end use case use case generate pretty print output use case summary user request application pretty print style file target sdt necessary file name pass hats sml hats sml apply pretty print style sdt format text file generate actors user hats sml precondition target sdt file generate pretty print style file exist application select refer use case scenario user select option pretty print target currently select application user select target sdt refer use case alt pretty print style file associate target file hats gui prompt user select pretty print style file user select pretty print style file refer use case alt hats gui generate file append txt target sdt root hats gui verify file exist current directory file output file alt hats gui send message host os start pretty print program send target sdt file pretty print style file output file pretty print command line argument hats sml apply style file target sdt write output output file specify command line alt hats sml terminate end use case alt target sdt select step skip use case continue step alt pretty print style file associate target file use case continue step alt file exist output file hats gui prompt user save output new prompt include text window contain current output file cancel option ok option user enter new select ok alt alt use case continue step alt user select cancel option end use case alt user select ok option change file output file remain unchanged exist file overwrite use case continue step alt pretty print encounter error text file generate hats gui display error message end use case general constraint general constraint development system follow system platform independent function properly operate system specifically system test sun solaris windows linux intend system run variation microsoft windows operate system later windows system design way minimize number window open application example acceptable open new window output file generate hats sml time file receive hats gui system develop java programming language system complete december assumption dependency following assumption respect hats gui jvm instal system hats gui run ml interpreter instal system hats gui run hat run system hats gui run hats support user time user high level sophistication need guidance form extensive help message host os support hierarchical tree structure file system development team use srs implement system hats sml version available october specific requirement external interface requirement section contain specification requirement user hardware software communication interface different component external capability user interface srsreq operation require user supply file allow user select file list derive file currently open application key file relative path complete path srsreq operation user prompt select list user able cancel operation srsreq collect generate output file hats sml hats gui overwrite file generate automatically example give transformation language program tlp file tlp parse generate parser execute tlp parse exist prior execute parser overwrite prompt user srsreq save copy file hats gui use following sequence action hats gui prompt user file file save hats gui examine content application directory file give exist hats gui prompt user overwrite exist file user agree overwrite file hats gui attempt write new file temporary delete previously exist file rename new file user agree overwrite exist file system error occur write rename new file delete previous file new file write previous file leave unchanged case error hats gui notify user error example user able save sdt generate transformation program execution user specify exist file exist file overwrite user confirm permissible srsreq output pretty print text file sdt display user request srsreq main interface menu drive summary menu available give table item row table level menu item item follow row second level menu item table menu item hats gui file application configure run view select select editor generate parser sdt edit close node display parse target text save save file association parse program standard error delete save hat sml execute transform standard output exit delete pretty print select text copy text software requirement specification cs4311 date page srsreq file menu contain menu item relate manipulate individual file close hats gui application srsreq application menu contain item relate manipulate entire application srsreq configure menu contain item relate modify configuration application srsreq run menu contain item relate execute hats sml program srsreq view menu contain item relate view hats sml output srsreq file select menu item provide interface select file currently open application srsreq file edit menu item provide interface start editor external process editor start accord information application configuration srsreq file save menu item provide interface save previously select file different srsreq file delete menu item provide interface delete select file hats gui prompt user confirm deletion prior complete action srsreq file exit menu item provide interface exit hats gui srsreq application select menu item provide interface select open application srsreq application close menu item provide interface close application srsreq application save menu item provide interface save application configuration information srsreq application save menu item provide interface save application associated file different srsreq application delete menu item provide interface delete application file application directory hats gui prompt user confirm deletion prior complete action srsreq configure editor menu item provide interface user enter editor configuration information information editor start process srsreq configure node display menu item provide interface configure display node srsreq hats gui allow user specify number level node expand sdt view srsreq hats gui allow user select color type display node display graph minimum system provide color red yellow white black green blue orange violet display node srsreq hats gui allow user select shape type display node display graph minimum system provide shape rectangle ellipsis display node srsreq configure file association menu item provide interface associate file application file association show table srsreq configure hats sml menu item provide interface user enter implementation dependent information start hats sml process srsreq run generate parser menu item provide interface generate parser program srsreq run parse target menu item provide interface select parse target program srsreq run parse program menu item provide interface select parse transformation language program srsreq run execute transform menu item provide interface select execute transformation language program srsreq run pretty print menu item provide interface select sdt pretty print style file format sdt accord style srsreq view sdt menu item provide interface view navigate search sdt output execution transformation program srsreq view text menu item provide interface view search pretty print text srsreq view standard error menu item provide interface view error string collect hats sml srsreq view standard output menu item provide interface view debug information collect hats sml srsreq view select text menu item provide interface select pretty print text text string associate sdt displays srsreq view copy text menu item provide interface copy select text operating system buffer hardware interfaces local hardware interface requirement software interfaces hats sml srsreq hats gui interface hats sml version order parse transformation language program execute transformation language program create output sdts error message pretty print text parse transformation language program interface consist start hats sml program pass command line argument capture datum write standard output standard error stream hats sml process hats sml program command line argument describe appendix srsreq gui allow user create modify copy delete application file regardless current status hats sml srsreq hats gui attempt start hats sml program fail hats gui notify user display following message unable start hats sml hats gui provide detail relate failure available host os example information available operate system include indication specify file ot exist file open file protection violation error occur operation host os srsreq hats gui able communicate sun solaris linux windows srsreq datum set save file file name appropriate extension table description file extension srsreq user able initiate process interface provide hats gui hats gui optionally pass command line argument process command sequence initiate process application configuration srsreq initiate process edit file hats gui responsible communication process pass command line argument srsreq hats gui interact host os file service perform following task create new file delete existing file open exist file read write read open file write open file close open file srsreq hats gui interact host os find file directory capability necessary hats gui display file list srsreq hats gui interact host os compare time stamp file time stamp indicate date time recent update file time stamp report precision second behavioral requirement relate real world object real world object application input output display window hats sml requirement relate object describe application hats gui manage different type file table file input transformation process output transformation process hats gui apply transformation invoke service hats sml accomplish transformation appendix datum flow description transformation process general description file application present section srsreq hats gui allow user create application minimally consist lexical specification file grammar file user define function file application configuration information user able application srsreq file associate give application store directory srsreq directory application file store name application srsreq exactly file describe lexical specification input associate application file extension spec srsreq exactly file describe grammar input associate application file extension grm srsreq exactly file describe interpretation function symbol associate application file write ml file extension lib srsreq srsreq hats gui suggest file user prompt user enter file hats gui suggest file file copy different directory hats gui suggest file sequentially number extension file copy directory example natlang txt exist suggest file natlang txt srsreq application associate application configuration application configuration element give table table application configuration element element description file association grammar lexical specification file associate parser parse transformation language program file associate transformation language program file parse target file associate target file transformation output sdt file name associate transformation language program file library program parser associate transformation language program file input target file associate transformation language program transformation language program file associate output sdt file recent pretty print style file format transformation output associate output sdt file target file pretty print style file associate text output file result transformation editor configuration command sequence initiate editor host os editor association association editor file type association editor specific file node display color display node type shape display node type node expansion number node expand expand display node parser file parser file associate language application input output type output generate hats sml describe section srsreq hats gui display output write standard output standard error stream tab selectable window text window clear prior execute individual hats sml program program contain program script case script window content clear prior execute script refer section discussion execution script file srsreq srsreq hats sml refer section requirement relate hats sml display windows srsreq system open new window user select display output srsreq display window open system button close window srsreq navigation window available navigation window discuss section srsreq active display window mouse cursor indicate location point device window srsreq display window keyboard cursor track current location display srsreq keyboard cursor movable arrow key srsreq keyboard cursor set location mouse cursor point device click stimulus response section detail response hats gui receive stimulus user host os hats sml menu item file menu srsreq user select file select menu item hats gui provide user list file currently open application allow user select file file currently select file application currently open hats gui prompt user select open application prompt user select file srsreq user select file save menu item hats gui prompt user enter new new file create currently open application newly enter file content select file write new file new file currently select file srsreq user select file delete menu item hats gui prompt user confirm deletion operation user confirm currently select file delete file currently select end operation srsreq user select file edit menu item hats gui request operate system start process load process editor specify application configuration select file pass editor command line argument editor start hats gui editor associate file application configuration editor associate file editor associate file type file application configuration editor associate file file type default editor default editor select hats gui present list configure editor allow user select editor editor configure hats gui inform user editor configure start editor srsreq user select file exit menu option hats gui request host operating system kill currently active hats sml process start hats gui halt hats gui process change configuration save user prompt save configuration user agree configuration save user agree configuration save application menu srsreq user select application select menu item hats gui display list directory name current working directory allow user navigate directory structure allow user select previously create application application currently select application srsreq user select application close menu item hats gui close currently select application application currently select end operation change configuration save user prompt save configuration user agree configuration save user agree configuration save srsreq user select application save menu item hats gui save application configuration information nonvolatile storage srsreq user select application save menu item hats gui prompt user new application hats gui create new directory level currently select application file application directory include subdirectory copy new directory new directory currently select application srsreq user select application delete menu item hats gui prompt user confirm deletion operation user confirm file application directory delete application directory delete application currently select end operation srsreq delete application directory application directory contain subdirectory system confirm deletion subdirectory user continue user confirm deletion subdirectory application director delete configure menu srsreq user select configure menu option hats gui provide list element application configuration allow user select element prompt user value configuration element application configuration element give section information application configuration run menu srsreq user select run generate parser menu option hats gui generate parser makeparser hats sml program describe appendix srsreq user select run parse target menu option hats gui parse select target program parsetarget hats sml program describe appendix target program select hats gui prompt user select target program srsreq user select run parse program menu option hats gui parse select transformation language program parsetlp hats sml program describe appendix target program select hats gui prompt user select transformation language program srsreq user select run execute transform menu option hats gui execute applytransformations hats sml program describe appendix process describe section srsreq user select run pretty print menu option hats gui execute pretty print hats sml program describe appendix process describe section view menu srsreq user select view sdt menu option hats gui prompt user select sdt file current application file list include sdt application viewing output detail section srsreq user select view text menu option hats gui prompt user select pretty printed text file current application viewing text output detail section srsreq user select view standard error menu option hats gui display standard error screen show output write standard error stream recent clearing datum viewing error detail section srsreq user select view standard output menu option hats gui display standard error screen show output write standard output stream recent clearing datum viewing output detail section mouse keyboard action section detail keyboard mouse selection navigation srsreq view sdt single left mouse click expandable display node expand node display node child collapse node hide node child srsreq display node expand number level child add display graph determine application configuration srsreq view sdt single left mouse click expand display node collapse display node display node collapse descendant node remove display graph hats sml completion srsreq hats gui collect process exit code hats sml process process exit code indicate nominal completion process process exit code indicate failure relate feature prepare application select delete copy application describe section editing file discuss section srsreq gui allow user import file select application import file consist copy file application directory parse execute transformation hats gui facilitate parse transformation language program target file hats gui orchestrate execute transformation language program parsing accomplish send parser file input file hats sml execute transformation language program parse transformation language program user define library file send hats sml execution transformation language program hats sml write sequence new sdt output sdt specify transformation language program hats gui data set available view save permanent file application addition output file transformation language program specify debug output write standard output stream error encounter program execution write standard error stream hats gui capture datum write stream datum available user parse run transformation describe section srsreq hats gui use protocol program signature list appendix execute hats sml programs srsreq perform transformation application hats gui execute following sequence action hats gui confirm transformation language program exist error program exist hats gui check parser file young grammar lexical specification file parser file generate grammar lexical specification file case hats gui generate new parser file hats gui check parse version transformation language program exist young parser file transformation language program file hats gui generate new parse version transformation language program hats gui start findtarget program transformation language program input hats gui list target program file generate findtarget file list check parse version target program exist young target parser file target program file hats gui generate new parse version target program hats gui start applytransformation program hats sml pass parse transformation language program file user define library file output file applytransformation program hats gui redirect standard output standard error stream capture text write stream srsreq srsreq hats gui allow user continue work transformation take place user able edit file view output transmit problem hats sml wait hats sml generate output srsreq hats gui allow user execute script file script file contain linear sequence hats sml program hats gui begin command execute command sequentially error occur command script file execute srsreq prior start execution script file display screen standard error standard output clear display transformation output type output receive hats sml error message write standard error stream result parser generation parsing program execution parse transformation language program parse target file transformation language program parser file target program parser file text output write standard output stream pretty print text srsreq hats gui allow user select output file application display srsreq hats gui allow user display select output file manner output display depend type output srsreq display node text selection srsreq user able select arbitrary set display node display graph select display node indicate visually following method select display node single node select right click mouse cursor node single node select move keyboard cursor node tab key press enter key click drag point device selection rectangle set display node select set adjacent node set node select hold shift key select node method specify previously section srsreq user able deselect select display node click right left mouse button mouse cursor point display node shift key depress press escape key srsreq view sdt select node result highlight display node small form tree select node srsreq system display navigation window user able select current sdt location click mouse cursor navigation window center display graph display node close mouse cursor mouse click srsreq sdt pretty print text display correspond single transform target file open highlighting cursor location motion mirror window display node select sdt display corresponding text pretty print window highlight user scroll end pretty print text display display sdt scroll corresponding display node display window srsreq user able resize window dynamically display graph window resize hats gui respond utilize space available srsreq display sdt result display text leaf node text display area srsreq text display text display area correspond concatenation node label separate space leaf node display graph order traversal left right leaf display node correspond non terminal sdt node label text window surround pointed bracket example non terminal term appear leaf node text representation appendix give example display text associate sdt srsreq hats gui provide copying text text display area system buffer available paste application editor srsreq user able display sdt time sdt display separate window display sdts following distinction sdt display graph sdt abstract tree contain set node display graph graphical representation subset node sdt display graph place visual representation node visual representation descendant node display graph display node display descendant node leaf node confuse terminal node sdt sdt type node terminal non terminal terminal node correspond token language non terminal node correspond element left hand production grammar language type node display graph list table srsreq hats gui provide manipulation display sdts srsreq sdts display direct acyclic graph node edge node display graph correspond node sdt edge display graph correspond parent child relationship node sdt srsreq initially display graph single display node node correspond root sdt srsreq display node child display simultaneously parent node display higher child srsreq display child single node appear height srsreq user able control display choose color shape display node base node type hats gui use shape color display node type store application configuration display node srsreq user able expand display node provide possible expand select node hats gui change graph display add descendant node display graph change expandable node internal node srsreq user able collapse display node hats gui change display graph remove descendant select display node change internal node non expandable leaf node srsreq user able hide set select display node hats gui change display remove select node display change parent descendant node remove node node hide descendant parent respectively srsreq user able issue unhide instruction reverse hide instruction display node srsreq issue unhide instruction user able issue rehide instruction reverse unhide instruction display node hide recent unhide instruction hidden srsreq hats gui allow user expand sdt predetermine number node level number level expand set application configuration srsreq hats gui provide function fully expand sub tree regardless node expansion level application configuration srsreq user able view multiple sdt simultaneously srsreq sdt display provide user view text associate leave display sub tree text copy pasteable host operating system text display hats gui window paste application text editor run concurrently hats gui srsreq sdt display provide user option refresh display display refresh current display erase sdt file read new sdt display generate new sdt display approximate previous sdt display expand sdt number node possible navigation srsreq display graph text display large fit inside window window scroll bar attach drag scrollbar button scroll display press arrow key keyboard scroll display srsreq text window keyboard cursor location accord following rule left arrow key move cursor left character cursor beginning line cursor move end previous line previous line cursor right arrow key move cursor right character cursor end line cursor move character line line current line cursor move arrow key move cursor line text column column change text column current cursor location cursor move end previous line space consider text arrow key move cursor line text column column change text column current cursor location cursor move end previous line space consider text srsreq keyboard cursor movement cause keyboard cursor text graph node currently display display scroll minimal display current cursor location srsreq display graph window keyboard cursor location accord following rule left arrow key move cursor unhidden node left node left need sibling current node need level current node node left cursor right arrow key move cursor unhidden node right node right need sibling current node need level current node node right cursor arrow key move cursor close ancestor hide node cursor arrow key move cursor leftmost near descendant hide node cursor srsreq point device cursor track motion point device keyboard cursor text element graph node close point device cursor point device click srsreq display graph entire sdt large window separate small window compress view sdt display compress view call navigation window display navigation window representation entire sdt draw small box display show sdt currently display main tree display window srsreq user able turn navigation window srsreq hats gui provide user capability search sdts search criterion describe appendix user enter search pattern appendix follow requirement hats gui search sdt matching pattern match find hats gui highlight match display node center display left level display node matching pattern keyboard cursor set node match find hats gui display message state match find srsreq initiate sdt search user able use following sequence action user select set node mouse cursor user press ctrl insert key combination user select tree search option hats gui present prompt enter search pattern user press ctrl shift insert key combination hats gui fill search pattern entry box text concatenate node highlight time ctrl insert key press user select initiation search srsreq search sdt pattern search begin sdt node correspond node current keyboard cursor location original start location search continue left right end sdt encounter end sdt encounter search continue root sdt arrive start location srsreq hats gui provide repeat search repeat search find match sub tree start current keyboard cursor location search terminate match sub tree find search arrive original start location srsreq hats gui provide repeat search reverse direction search reverse direction continue right left search terminate match sub tree find search arrive original starting location srsreq hats gui provide user capability search text display text sub string search criterion describe appendix user prompt enter text string describe string pattern hats gui search text match pattern match find hats gui highlight match text center display left element match text match find hats gui display message state match find srsreq search text pattern search begin current keyboard cursor location continue left right end text encounter end text encounter search continue start text arrive start location display pretty print text pretty print text text format white space line break pretty print text generate terminal node sdt apply pretty print style sdt hats pretty printer general transformation system output pretty printer contain text find terminal node sdt contain text terminal sdt node extreme case output pretty printer token terminal node input sdt lack correspondence terminal node text pretty print text association action display graph pretty print text difficult following assume terminal node text appear output pretty printer srsreq formatting display pretty print text faithful formatting represent pretty print text file additional white space insert fixed width font display text srsreq user able select pretty print text file display srsreq select pretty print text display separate window srsreq window pretty print text allow scroll left right text large display window srsreq hats gui provide user capability search text display text sub string search criterion describe appendix user prompt enter text string describe string pattern hats gui search text match pattern match find hats gui highlight match text center display left element match text keyboard cursor set location match find hats gui display message state match find srsreq search text pattern search begin location keyboard cursor continue left right end text encounter end text encounter search continue start text arrive start location display error srsreq hats gui halt result error message receive hats sml srsreq hats gui collect error message hats sml single display area display area initially clear contain error message generate hats sml hats gui start display area window accessible window tab display list error receive hats sml order receive srsreq error display request user srsreq user able clear error window restart hats gui display sdt pretty print text common target file srsreq sdt pretty print text display correspond single transform target file open navigation sdt window result navigation pretty print text window searching selecting cursor location motion mirror window specifically node select display graph correspond text pretty print window highlight purpose correspond text text correspond terminal node sdt descendant sdt node correspond select display node srsreq sdt pretty print text display correspond single transform target file open navigation pretty print text window result navigation sdt display selecting cursor location motion mirror window specifically text select text window display node correspond node sdt highlight non behavioral requirement performance requirement srsreq hats gui display sdt node second srsreq hats gui display node sdt time plus minus second take display node sdt srsreq hats gui allow user request transformation hats sml perform transformation parse srsreq hats gui allow user navigate display sdt node scroll screen width portion sdt display take second srsreq complexity text search algorithm exceed n2 node srsreq complexity tree search algorithm exceed n2 node srsreq complexity scroll algorithm text display graph exceed n2 display node qualitative requirement security srsreq user require log authenticate identity system portability intend hats gui run platform support ml java hats sml version intend eliminate non portable communication technique srsreq gui run windows sun solaris linux operating system modification java code design implementation constraint srsreq system implement java programming language srsreq algorithm display sdt implement find unacceptable draw sdt large virtual window small viewing area zoom portion tree algorithm result excessive memory usage slow performance algorithm hats gui requirement requirement time appendix hats gui class diagram applicati om ain parses hats nam onfig urati create open configure save save clos tar tup omm ands pa rs ta rg et pars tlp apply tr ans fo rm ation transform returns core ty tlp pars ed tlp tgt filenam filenam filenam filenam filenam pec filenam grm filenam filenam output dis pla editor start com graphical play leaf text sd filenam pr etty printe text er ror type metric dis played ode color hape label paint xpa nd collaps search hide highlight navigate dis play node label filenam root expand able expandable iddent parent expandable expandable idden parent internal figure hats gui class diagram appendix hats gui data flow diagram conf igure application new setting current setting change current setting application iles iles prepare application instruction iles user ilenam es output output parse ilenam es iles error apply transf ormation error display sdt graph pretty print text manipulate nav igate sdt graph user selection apping apping manipulate pretty print text pretty print text pretty print text user selection figure hat gui datum flow diagram level hat gui data flow diagram level application leaf text display sdt file leaf text generate graphical representation graph graph display window memory currently display pretty print text pretty print text shift graph graph graph highlight node map node pretty print text manipulate pretty print text diagram navigate graph graph hide node expand graph collapse graph collapse graph expand graph hide node highlight node select node match node search sdt direction select node select node select node select node map node find good form tree map pretty print text node manipulate pretty print text diagram search criterion user figure hat gui datum flow diagram manipulate navigate sdt hat gui data flow diagram level application create application setting save filename editor filename launch editor open file editor host user figure hats gui data flow diagram prepare application hat gui datum flow diagram level highlight memory currently highlight text pretty print text display pretty print text manipulate navigate sdt map node pretty print text map text select text match text search pretty print text search criterion user pretty print text map pretty print text node graph pretty print text display display manipulate navigate sdt memory currently display graph figure hat gui datum flow diagram manipulate pretty print text hat gui datum flow diagram level target sdt parser target program parse target program target parser parser grammar lexer application transformation lang prog parser tlp sdt parse tlp tlp sdt user define library pprint style file pretty print output sdt target sdt pprint text output sdt apply transformation figure hat gui datum flow diagram apply transformation appendix hat gui state transition diagram hat gui state transition diagram xit saving application xit pretty print application select elect applicatio clos application ap plica tion selec ted dis play sdt apply trans form ati apply tra nsform tion make target pars er make tlp pars er pars e target program pars e tlp program apply tlp figure hats gui state diagram appendix hats sml communication protocol hats sml collection program invoke command line argument collectively provide functionality hats table list program argument description program argument program positional specify input output file name program file complete path description file give follow table table summary hats sml program makeparser generate parser transformation language program target program give language makeparser generate parser file translation language program write file path specify argument parser program makeparser return parser program file generation successful parsetarget generate parse target file target parser file target parser program file generate previously makeparser parsetarget generate sdt file represent target file write path specify argument targetsdt program return targetsdt file generation successful parsetlp generate parse transformation language program file translation language program parser parser program transformation language program program tlp parser file generate previously makeparser parsetlp generate sdt file represent translation program file write path specify argument programsdt program return programsdt file generation successful findtarget generate list target file input transformation language program target file name list file write file line file applytransformation execute transformation language program input user define function file function program sdt generate parsetlp output file write accord path name embed program program return transformation program execute successfully prettyprint